Further instructions, updates for MOCA artifact evaluators
UPDATE: We forgot updating the instruction on the submitted AE material on the submission site when we were changing single f1 to 3 parallel f1 instances to speed up the evaluation. In case of running multiple parallel f1 instances, "default_hw_config" on config_runtime.yaml should be just left as the default one. (See line 49 of this text file)

* Problem cloning forked FireSim repository
If there's problem cloning forked version of FireSim, please clone the recent FireSim repository, and check-out MOCA branch for Gemmini and gemmini-rocc-tests inside gemmini/software. If you are manually checking out Gemmini MoCA branches on default FireSim, you would also need to change RocketConfigs.scala (https://github.com/SeahK/chipyard/blob/4e7fe79e5947e425365cf0db46599d9b40a829d2/generators/chipyard/src/main/scala/config/RocketConfigs.scala#L53) and TargetConfigs.scala
(https://github.com/SeahK/chipyard/blob/4e7fe79e5947e425365cf0db46599d9b40a829d2/generators/firechip/src/main/scala/TargetConfigs.scala#L205).


* Problem compiling / running the binaries
If there's any issue compiling and running the binaries, or do not want to compile binaries yourself, please try downloading the pre-built binaries that we have ran while preparing AE. We verified that the artifacts build and run without issue with reasonable results more than 5 consecutive turns prior to the AE submission, but just in case, would provide the latest pre-built binaries and FireSim run result.
- Pre-built binaries: https://drive.google.com/file/d/1olTavS5DSi8-0_L_JwPe0hUbrMSj2jqs/view?usp=sharing
- The result of running these binaries, scripts and plots are here: https://github.com/ucb-bar/gemmini-rocc-tests/tree/MOCA/moca-ae-result
- We also copied the result uartlog and plot scripts on forked FireSim: https://github.com/SeahK/firesim/tree/main/deploy/results-workload, under EXAMPLE_RESULT. If you have trouble accessing forked FireSim, then just copy from gemmini-rocc-tests directory.
You can obtain result of the provided binary (above) by following these steps:
1) Download, unzip and place this under gemmini/software/overlay/root, so that overlay/root/imagenet would have 18 -linux binaries.
2) Run these commands:
cd /home/centos/firesim/sw/firesim-software/
rm images/gemmini-tests-workload*
./marshal -v --workdir /home/centos/firesim/target-design/chipyard/generators/gemmini/software build gemmini-tests-workload.json
./marshal -v --workdir /home/centos/firesim/target-design/chipyard/generators/gemmini/software install gemmini-tests-workload.json


* Need more detailed instruction of setting up config_runtime, config_hwdb to launch FireSim runs
1) On config_hwdb.yaml in firesim/deploy, add the following texts at the end of the .yaml file:
firesim_eightcore_gemmini_moca:
    agfi: agfi-001bd1f383ffdd9ff
    deploy_triplet_override: null
    custom_runtime_config: null
2) On config_runtime.yaml, change like following:
    run_farm_hosts_to_use:
      - f1.16xlarge: 0
      - f1.4xlarge: 0
      - f1.2xlarge: 3
      - m4.16xlarge: 0
      - z1d.3xlarge: 0
      - z1d.6xlarge: 0
      - z1d.12xlarge: 0

    target_config:
        topology: three_no_net_config
        no_net_num_nodes: 3
        link_latency: 6405
        switching_latency: 10
        net_bandwidth: 200
        profile_interval: -1

    default_hw_config: firesim_rocket_quadcore_nic_l2_llc4mb_ddr3 => just leave this as given default one - should not be "firesim_eight_gemmini_moca"

    workload:
        workload_name: gemmini-tests-workload.json
        terminate_on_completion: no
        suffix_tag: null

* Running tests, parsing results
By running firesim runworkloads, three f1.2xlarge instance would be launched.
Each instance would be running each workload model set (A/B/C each).
After the run finishes, please do "firesim terminaterunfarm" and then "yes" to terminate the run.
Go to firesim/deploy/results-workload directory and run
    ./build-sla.sh ($result-dir)
    ./build-stp.sh ($result-dir)
result-dir should be something look like 2022-11-02--05-47-28-gemmini-tests-workload, that contains three sub-directory (gemmini-tests-workloads-workload_A/B/C).
The three instance's runtime would not be the same. If one or two finish earlier than others, and if you want to test the early finished ones first, run:
    python3 parse_result_from_uartlog.py ($result-dir)/gemmini-tests-workload-workload_c/uartlog C
    python3 make_fair.py ($result-dir)/gemmini-tests-workload-workload_c/uartlog C
If workload C is the one that is finished early, and you would like to test it individually.
(replace workload_c to workload_b and C to B, if workload_B is the one that you would like to plot first)


Please contact the writer of this document if there are further issues.
